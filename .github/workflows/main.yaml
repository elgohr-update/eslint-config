name: main
on:
  push:
    branches:
      - master
jobs:
  npm-publish:
    name: npm-publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Set up Node.js
      uses: actions/setup-node@master
      with:
        node-version: 14.x

    - name: Install dependencies
      run: npm ci

    - name: Configure git
      id: configure_git
      run: |
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git config user.name "$GITHUB_ACTOR"

    - name: Standard Version
      id: bump_version
      run: |
        npx standard-version
        git push --follow-tags origin master
        echo ::set-env name=RELEASE_VERSION::$(node -p "require('./package.json').version") 
        echo ::set-env name=NPM_ASSET::$(npm pack | tail -n 1)

    - name: Publish to npm
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc
        npm publish

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.RELEASE_VERSION }}
        release_name: Release v${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.NPM_ASSET }}
        asset_name: ${{ env.NPM_ASSET }}
        asset_content_type: application/gzip

    - name: Publish static site to Netlify
      uses: jsmrcaga/action-netlify-deploy@master
      if: ${{ env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != '' }} 
      with:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_DEPLOY_MESSAGE: "Prod deploy v${{ github.ref }}"
        NETLIFY_DEPLOY_TO_PROD: true
        build_directory: out

    - name: Publish to Docker Hub
      uses: elgohr/Publish-Docker-Github-Action@master
      if: ${{ env.DOCKER_USERNAME != '' && env.DOCKER_USERNAME != '' }} 
      with:
        name: ${{ env.GIT_REPO }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildoptions: "--compress --force-rm"
        tags: "latest,${{ env.RELEASE_VERSION }}"

